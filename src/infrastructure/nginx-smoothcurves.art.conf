# SmoothCurves.art Portfolio - Nginx Configuration
# Portfolio domains routing to Docker containers
# MCP configuration remains in separate file: /etc/nginx/sites-available/smoothcurves-nexus
#
# Installation:
#   sudo cp src/infrastructure/nginx-smoothcurves.art.conf /etc/nginx/sites-available/smoothcurves.art
#   sudo ln -sf /etc/nginx/sites-available/smoothcurves.art /etc/nginx/sites-enabled/
#   sudo nginx -t
#   sudo systemctl reload nginx

# HTTP to HTTPS redirect for portfolio domains only
server {
    listen 80;
    listen [::]:80;
    server_name smoothcurves.art www.smoothcurves.art smoothcurves.love www.smoothcurves.love dev.smoothcurves.art;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# Production - smoothcurves.art
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name smoothcurves.art www.smoothcurves.art;

    # SSL certificates (will be managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/smoothcurves.art/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/smoothcurves.art/privkey.pem;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Frontend - Next.js (port 3000)
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Backend API (port 4000)
    # Use trailing slash to prevent matching /api-explorer
    location /api/ {
        proxy_pass http://localhost:4000/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support for real-time features
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    # Static assets with aggressive caching
    location /_next/static {
        proxy_pass http://localhost:3000;
        expires 1y;
        add_header Cache-Control "public, immutable, max-age=31536000";
    }

    # Note: Media files under /api/media are handled by backend via /api/ location
    # Other media requests will fall through to frontend via / location
}

# Redirect smoothcurves.love to smoothcurves.art
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name smoothcurves.love www.smoothcurves.love;

    # SSL certificates (will be managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/smoothcurves.love/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/smoothcurves.love/privkey.pem;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Redirect to .art domain
    return 301 https://smoothcurves.art$request_uri;
}

# Dev environment - dev.smoothcurves.art
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dev.smoothcurves.art;

    # SSL certificates (will be managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/dev.smoothcurves.art/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev.smoothcurves.art/privkey.pem;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Frontend dev (port 3001)
    location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Backend dev API (port 4001)
    location /api/ {
        proxy_pass http://localhost:4001/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }
}
