# MCP Coordination System - Nginx Configuration
# Serves the MCP coordination system and related services
#
# Installation:
#   sudo cp src/infrastructure/nginx-smoothcurves-nexus.conf /etc/nginx/sites-available/smoothcurves-nexus
#   sudo ln -sf /etc/nginx/sites-available/smoothcurves-nexus /etc/nginx/sites-enabled/
#   sudo nginx -t
#   sudo systemctl reload nginx

# HTTP server - serve openapi.json directly, redirect everything else to HTTPS
server {
    listen 80;
    server_name smoothcurves.nexus;

    # Serve openapi.json on HTTP for MCP client discovery (LMStudio, ChatGPT, etc)
    location = /openapi.json {
        proxy_pass http://localhost:3444/openapi.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto http;

        # Ensure proper content type
        add_header Content-Type application/json always;
        add_header Access-Control-Allow-Origin * always;
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server for MCP
server {
    listen 443 ssl http2;
    server_name smoothcurves.nexus;

    # Let's Encrypt SSL certificates
    ssl_certificate /etc/letsencrypt/live/smoothcurves.nexus/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/smoothcurves.nexus/privkey.pem;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;

    # DEVELOPMENT MCP endpoint (port 3446) - for testing and dev work
    location /mcp/dev/ {
        # Rewrite /mcp/dev/xxx to /xxx before proxying
        rewrite ^/mcp/dev/(.*) /$1 break;
        proxy_pass http://localhost:3446;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Environment identifier
        add_header X-MCP-Environment "development" always;
        add_header X-MCP-Server "dev-3446" always;

        # SSE-specific headers (no timeout!)
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 24h;
        proxy_send_timeout 24h;
    }

    # PRODUCTION MCP endpoint (port 3444)
    location /mcp {
        proxy_pass https://localhost:3444/mcp;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Environment identifier
        add_header X-MCP-Environment "production" always;
        add_header X-MCP-Server "prod-3444" always;

        # SSE-specific headers (no timeout!)
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 24h;
        proxy_send_timeout 24h;
    }

    # OAuth 2.1 discovery endpoints
    location /.well-known/ {
        proxy_pass https://localhost:3444/.well-known/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # OAuth authorization endpoints
    location /authorize {
        proxy_pass https://localhost:3444/authorize;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /token {
        proxy_pass https://localhost:3444/token;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /register {
        proxy_pass https://localhost:3444/register;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Web UI dashboard - serve static files directly from production
    location /web-ui/ {
        alias /mnt/coordinaton_mcp_data/production/web-ui/;
        try_files $uri $uri/ =404;

        # Proper MIME types for static files
        location ~* \.(js)$ {
            add_header Content-Type application/javascript;
            expires 1h;
        }

        location ~* \.(css)$ {
            add_header Content-Type text/css;
            expires 1h;
        }

        location ~* \.(html|htm)$ {
            add_header Content-Type text/html;
            expires 5m;
        }

        # Security headers for static files
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
    }

    # Privacy Policy - serve directly from web-ui directory
    location = /privacy-policy {
        alias /mnt/coordinaton_mcp_data/production/web-ui/privacy-policy.html;
        add_header Content-Type text/html;
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        expires 1d;
    }

    # Health check
    location /health {
        proxy_pass https://localhost:3444/health;
        proxy_set_header Host $host;
        access_log off;
    }

    # Root redirects to health
    location = / {
        return 302 /health;
    }
}
