{
  "permissions": {
    "allow": [
      "mcp__coordination-system-Local-Dev__bootstrap",
      "mcp__coordination-system-Local-Dev__get_pending_tasks",
      "mcp__coordination-system-Local-Dev__send_message",
      "mcp__coordination-system-Local-Dev__claim_task",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npx create-next-app:*)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",
      "mcp__coordination-system-Local-Dev__get_messages",
      "Bash(chmod:*)",
      "mcp__coordination-system-Local-Dev__update_task",
      "mcp__coordination-system-Production__get_messages",
      "mcp__coordination-system-Production__send_message",
      "Bash(git mv:*)",
      "mcp__coordination-system-Production__bootstrap",
      "mcp__coordination-system-Production__get_tasks",
      "mcp__coordination-system-Production__get_pending_tasks",
      "Bash(npm run dev:*)",
      "Bash(cat:*)",
      "Bash(git log:*)",
      "Read(//d/Lupo/Source/Portfolio/HumanAdjacentAI-Protocol/**)",
      "Read(//d/Lupo/Source/Portfolio/docs/**)",
      "Read(//d/Lupo/Source/Portfolio/**)",
      "Bash(mkdir:*)",
      "Bash(npm run build:*)",
      "Bash(git restore:*)",
      "Read(//e/mnt/lupoportfolio/content/couples/**)",
      "Read(//e/mnt/lupoportfolio/content/**)",
      "Read(//e/mnt/lupoportfolio/logs/**)",
      "Read(//c/Users/LupoG/Downloads/**)",
      "Bash(curl:*)",
      "Bash(powershell:*)",
      "Bash(npx kill-port:*)",
      "mcp__coordination-system-Production__create_project",
      "mcp__coordination-system-Production__create_task",
      "mcp__coordination-system-Production__update_task",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "mcp__coordination-system-Production__claim_task",
      "Bash(lsof:*)",
      "Bash(git reset:*)",
      "Bash(npx tsc:*)",
      "Bash(npm run type-check:*)",
      "Read(//d/Lupo/Source/**)",
      "Bash(git -C D:/Lupo/Source/Portfolio/docs add -A)",
      "Bash(git -C D:/Lupo/Source/Portfolio/docs commit -m \"$(cat <<''EOF''\ndocs: Add collection layout system config guide and examples\n\nAdd comprehensive documentation for new config-driven layout system.\n\n**Guide:**\n- CONFIG_SCHEMA_GUIDE.md: Complete reference for creating config.json files\n- Covers curated and dynamic layouts\n- Section types reference (hero, text, carousel, image, video, separator)\n- Carousel options mapping\n- Image query system documentation\n- Workflow and tips\n\n**Examples:**\n- curated-sunset-monsters.json: Full curated layout with hero, text, multiple carousels\n- dynamic-simple.json: Simple 2-across dynamic grid\n- curated-ultra-wide.json: Query-based ultra-wide image selection demo\n\nThis enables Lupo to create complex photography layouts via JSON\nconfiguration without code changes.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(python:*)"
    ],
    "deny": [],
    "ask": []
  }
}
